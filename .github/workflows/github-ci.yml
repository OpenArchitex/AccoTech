name: Application CI
on: [push, pull_request]
jobs:
    validation:
        name: "Gradle Wrapper Validation"
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: gradle/wrapper-validation-action@v1
    pipeline:
        name: AccoTech pipeline
        runs-on: ubuntu-latest
        if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.pull_request.title, '[skip ci]') && !contains(github.event.pull_request.title, '[ci skip]')"
        timeout-minutes: 40
        env:
            NODE_VERSION: 12.16.1
            SPRING_OUTPUT_ANSI_ENABLED: DETECT
            SPRING_JPA_SHOW_SQL: false
            JHI_DISABLE_WEBPACK_LOGS: true
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v1
              with:
                  node-version: 12.16.1
            - uses: actions/setup-java@v1
              with:
                  java-version: '11.x'
            - name: Install node.js packages
              run: npm install
            - name: Run backend test
              run: |
                  chmod +x gradlew
                  ./gradlew clean test integrationTest -x webpack
            - name: Run frontend test
              run: npm run test-ci
            - name: Analyze code with SonarQube
              if: github.repository == 'OpenArchitex/AccoTech' && github.ref == 'refs/heads/main'
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
              run: |
                  if [ -n $SONAR_TOKEN ]; then
                      ./gradlew sonarqube --no-daemon -Dsonar.organization=openarchitex -Dsonar.host.url=https://sonarcloud.io
                  else
                      echo No SONAR_TOKEN, skipping...
                  fi

            # Substitutes the variables/secrets
            - uses: microsoft/variable-substitution@v1
              with:
                files: '${{ github.workspace }}/src/main/resources/config/application-heroku.yml'
              env:
                spring.data.mongodb.uri: ${{ secrets.DATABASE_URI }}
                spring.data.mongodb.database: ${{ secrets.DATABASE_NAME }}
                spring.data.mongodb.password: ${{ secrets.DATABASE_PASSWORD }}

            # Replace DatabaseConfiguration without migration (Mongo-Atlas hack due to bug in Mongobee)
            - name: Replace DatabaseConfiguration.java
              run: cd src/main/java/com/openarchitex/accotech/config && mv DatabaseConfiguration.txt DatabaseConfiguration.java

            - name: Package application
              run: ./gradlew bootJar -PnodeInstall -Pprod -x test -x integrationTest
            - name: Deploy to Heroku
              if: github.event_name == 'push' && github.ref == 'refs/heads/main'
              env:
                  HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
              run: |
                  heroku container:login
                  heroku container:push -a acco-tech web
                  heroku container:release -a acco-tech web
